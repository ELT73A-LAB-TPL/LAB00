name: Grade Student Submission

on:
  push:
    branches:
      - main # Or your target branch for student submissions (e.g., 'submissions', 'master')
  pull_request:
    branches:
      - main # Or your target branch

jobs:
  grade:
    runs-on: ubuntu-latest # You can also use windows-latest or macos-latest if needed

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4 # Action to check out your repository code

    # --- Start of custom grading logic ---

    - name: Execute Grading Script
      id: grading # Assign an ID to this step to reference its outputs
      run: |
        # Make your grading script executable (if it's a shell script)
        chmod +x ./grading_script.sh
        # Run your grading script.
        # It should ideally output the grade or a summary to standard output,
        # or create a file (e.g., grade.json, grade.txt) with the results.
        # The '>> $GITHUB_OUTPUT' part is crucial for making the grade available to subsequent steps.
        ./grading_script.sh > grade_report.txt # Direct output to a file
        echo "grade=$(cat grade_report.txt | grep 'Grade:' | awk '{print $2}')" >> $GITHUB_OUTPUT # Extract specific info

    - name: Display Grade and Feedback
      run: |
        echo "--- Grading Results ---"
        echo "Grade: ${{ steps.grading.outputs.grade }}"
        echo "Raw Grading Output:"
        cat grade_report.txt # Display the full report generated by your script

    # --- Optional: Store artifacts ---
    - name: Upload Grade Report as Artifact
      uses: actions/upload-artifact@v4
      with:
        name: grade-report-${{ github.sha }}
        path: grade_report.txt # Path to the file generated by your grading script
        retention-days: 5 # How long to keep the artifact

    # --- Optional: Post comments to Pull Requests (useful for student feedback) ---
    - name: Add comment to Pull Request
      if: github.event_name == 'pull_request' # Only run this step if it's a pull request
      uses: actions/github-script@v7
      with:
        script: |
          const grade = "${{ steps.grading.outputs.grade }}";
          const report = require('fs').readFileSync('grade_report.txt', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `## Grading Results\n\n**Final Grade: ${grade}**\n\n<details><summary>Detailed Report</summary>\n\n\`\`\`\n${report}\n\`\`\`\n\n</details>`
          });
